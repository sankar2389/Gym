function getUrlVars(){{var e={};window.parent.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(t,r,a){e[r]=a})}return e}function removeNulls(e){var t=e instanceof Array;for(var r in e)null===e[r]?t?e.splice(r,1):delete e[r]:"object"==typeof e[r]&&removeNulls(e[r]);return 1}function citrusFilterWallet(e,t){for(var r,a=t.length,i=e.netBanking.length,n=e.creditCard.length,s=e.debitCard.length,o=[],u=[],l=[],d=0;i>d;d++)o.push(e.netBanking[d].bankName);for(var d=0;n>d;d++)-1===jQuery.inArray(e.creditCard[d].toLowerCase(),u)&&(u.push(e.creditCard[d].toLowerCase()),r=CitrusPay.Scheme.Model.ReformatScheme(e.creditCard[d].toLowerCase()),CitrusPay.Scheme.Config.credit.push(r));e.creditCard=u;for(var d=0;s>d;d++)-1===jQuery.inArray(e.debitCard[d].toLowerCase(),u)&&(l.push(e.debitCard[d].toLowerCase()),r=CitrusPay.Scheme.Model.ReformatScheme(e.debitCard[d].toLowerCase()),CitrusPay.Scheme.Config.debit.push(r));e.debitCard=l;for(var y,c={},d=0;a>d;d++){switch(t[d].type){case"netbanking":y=t[d].bank,-1===jQuery.inArray(y,o)&&delete t[d];break;case"credit":null!==t[d].scheme&&void 0!==t[d].scheme&&(y=t[d].scheme.toLowerCase(),-1===jQuery.inArray(y,u)&&delete t[d]);break;case"debit":null!==t[d].scheme&&void 0!==t[d].scheme&&(y=t[d].scheme.toLowerCase(),-1===jQuery.inArray(y,l)&&delete t[d]);break;default:delete t[d]}null!==t[d]&&(c[d]=t[d])}var P={};return P.paymentOptions=e,P.wallet=t,removeNulls(P),console.log(JSON.stringify(CitrusPay.Scheme.Config)),P}function fetchmerchantPaymentOptions(e,t){var r=CitrusPay.Merchant.Config.Merchant.vanityUrl;CitrusPay.Rest.Merchant.API.getavailablePaymentOptions(r,function(r){var a=citrusFilterWallet(r,e);if(t===!0){var i=a.wallet;handleCitrusWallet(i)}else{var n=a.paymentOptions;console.log(JSON.stringify(n)),handleCitrusPaymentOptions(n)}},function(){console.log("Error in retrieving the options")})}function loadPaymentOptions(e){CitrusPay.Rest.ProfileV2.Profile.API.getProfileElement(CitrusPay.Rest.ProfileV2.Profile.Model.ProfileElement.Type.payment,e,function(e){var t=[];try{CitrusPay.Rest.ProfileV2.Profile.Validators.PaymentValidator(e);for(var r=0,a=e.paymentOptions.length;a>r;r++)t.push(e.paymentOptions[r])}catch(i){console.log("Incorrect payment details recieved: ")}fetchmerchantPaymentOptions(t,!0)},function(){console.log("Error making payment details request."),fetchmerchantPaymentOptions([],!0)})}function memberPayment(e){var t,r,a=jQuery("input[name=CitrusWalletPaymentOption]:checked").val(),i=0,n=jQuery("#citrusMerchantTxnId").val(),s=CitrusPay.Rest.Payment.Model.Amount({value:jQuery("#citrusAmount").val()}),o=CitrusPay.Merchant.Config.Merchant.vanityUrl,u=CitrusPay.Rest.Payment.Payment.Model.UserDetails({email:jQuery("#citrusEmail").val(),firstName:jQuery("#citrusFirstName").val(),lastName:jQuery("#citrusLastName").val(),address:CitrusPay.Rest.Payment.Payment.Model.Address({street1:jQuery("#citrusStreet1").val(),street2:jQuery("#citrusStreet2").val(),city:jQuery("#citrusCity").val(),state:jQuery("#citrusState").val(),country:jQuery("#citrusCountry").val(),zip:jQuery("#citrusZip").val()}),mobileNo:jQuery("#citrusMobile").val()});if("netBanking"==e)if("undefined"!=typeof a&&null!==a)t=CitrusPay.Rest.Payment.Payment.Model.PaymentToken.MemberPaymentOptionToken({id:a});else{i=1;var l=jQuery("#citrusAvailableOptions option:selected").text(),d=jQuery("#citrusAvailableOptions").val();t=CitrusPay.Rest.Payment.Payment.Model.PaymentToken.PaymentOptionToken({paymentMode:CitrusPay.Rest.Payment.Payment.Model.ModeOfPayment.NetBanking({type:"netbanking",bank:l,code:d})})}else if("card"==e)if("undefined"!=typeof a&&null!==a){var y=a.split("&")[1],c=a.split("&")[0];t=CitrusPay.Rest.Payment.Payment.Model.PaymentToken.PaymentOptionIdToken({type:"paymentOptionIdToken",id:y,cvv:jQuery("#CitrusMembercvv"+c).val()})}else{i=1;var P=jQuery("#citrusCardType").val().toLowerCase(),m=jQuery("#citrusNumber").val().replace(/\s+/g,""),C=jQuery("#citrusExpiry").val().replace(/\s+/g,"");switch(P){case"credit":r=CitrusPay.Rest.Payment.Payment.Model.ModeOfPayment.CreditCard({scheme:jQuery("#citrusScheme").val(),number:m,holder:jQuery("#citrusCardHolder").val(),expiry:C,cvv:jQuery("#citrusCvv").val()});break;case"debit":r=CitrusPay.Rest.Payment.Payment.Model.ModeOfPayment.DebitCard({scheme:jQuery("#citrusScheme").val(),number:m,holder:jQuery("#citrusCardHolder").val(),expiry:C,cvv:jQuery("#citrusCvv").val()})}t=CitrusPay.Rest.Payment.Payment.Model.PaymentToken.PaymentOptionToken({paymentMode:r})}else"citrusbanking"==e&&(r=CitrusPay.Rest.Payment.Payment.Model.ModeOfPayment.PrepaidCard({scheme:"CPAY",holder:jQuery("#citrusPrepaidCardHolder").val()}),t=CitrusPay.Rest.Payment.Payment.Model.PaymentToken.PaymentOptionToken({paymentMode:r}));var f,p,V=CitrusPay.Rest.Payment.Payment.Model.PaymentRequest({returnUrl:jQuery("#citrusReturnUrl").val(),amount:s,merchantAccessKey:CitrusPay.Merchant.Config.Merchant.accessKey,paymentToken:t,merchantTxnId:n,requestSignature:jQuery("#citrusSignature").val(),userDetails:u}),g=parseInt(jQuery("#citrusCustomParamCount").val());null!==g&&"undefined"!=typeof g&&g>0&&(V.customParameters={});for(var R=1;g>=R;R++)f=jQuery("#citrusCustomParamsName"+R).val(),p=jQuery("#citrusCustomParamsValue"+R).val(),V.customParameters[f]=p;CitrusPay.Rest.Payment.Payment.API.makePayment(V,o,function(e){e&&"0"===e.pgRespCode?window.location=e.redirectUrl:citrusServerErrorMsg(e)},function(e){citrusServerErrorMsg(e),console.log("Error making payment request.")})}function fetchPaymentOptions(){citrusMemberSignup()}function citrusMemberLogin(){CitrusPay.Rest.OAuth.API.getPasswordToken(CitrusPay.Rest.OAuth.Model.PasswordTokenRequest({clientId:CitrusPay.Merchant.Config.OAuth.clients.password.clientId,clientSecret:CitrusPay.Merchant.Config.OAuth.clients.password.clientSecret,username:jQuery("#citrusEmail").val(),password:jQuery("#citrusPassword").val()}),function(e){try{CitrusPay.Rest.OAuth.Validators.TokenResponseValidator(e),loadPaymentOptions(e)}catch(t){console.log("Invalid token received: "+JSON.stringify(e))}},function(){citrusServerErrorMsg("Please verify the username and password"),console.log("Error making token request.")})}function citrusMemberSignup(){var e={username:jQuery("#citrusEmail").val(),firstName:jQuery("#citrusFirstName").val(),lastName:jQuery("#citrusLastName").val(),phoneNumber:jQuery("#citrusMobile").val(),merchantTxnId:jQuery("#citrusMerchantTxnId").val(),vanityUrl:CitrusPay.Merchant.Config.Merchant.vanityUrl,addressStreet1:jQuery("#citrusStreet1").val(),addressStreet2:jQuery("#citrusStreet2").val(),addressCity:jQuery("#citrusCity").val(),addressState:jQuery("#citrusState").val(),addressCountry:jQuery("#citrusCountry").val(),addressZip:jQuery("#citrusZip").val()};CitrusPay.Rest.OAuth.API.signUpUser(CitrusPay.Rest.OAuth.Model.SignUpRequest(e),CitrusPay.Merchant.Config.Merchant.vanityUrl,function(){try{fetchmerchantPaymentOptions([],!1)}catch(e){console.log("Error in signing up "),fetchmerchantPaymentOptions([],!1)}},function(){console.log("Error in signing up"),fetchmerchantPaymentOptions([],!1)})}function makePayment(e){switch(e=e.toLowerCase()){case"card":memberPayment("card");break;case"netbanking":memberPayment("netBanking");break;case"citrusbanking":memberPayment("citrusbanking")}}var CitrusPay={};CitrusPay.Merchant={},CitrusPay.Config=function(){function e(){return env}function t(e){if(!i[e])throw env=i.DEBUG,v2Env=o.DEBUG,citrusClientErrMsg("Invalid Environment specified: "+env),new Error("Invalid Environment specified: "+env);env=e,v2Env=e}function r(){return n[env]}function a(){return o[env]}var i={DEBUG:"DEBUG",TEST:"TEST",STAGING:"STAGING",SANDBOX:"SANDBOX",PRODUCTION:"PRODUCTION",LOCAL:"LOCAL"},n={TEST:"https://sandboxadmin.citruspay.com/",DEBUG:"https://sandboxadmin.citruspay.com/",STAGING:"https://stgadmin.citruspay.com/",PRODUCTION:"https://admin.citruspay.com/",LOCAL:"http://localhost:8080/admin-site/"},s={CREDIT_CARD:"CREDIT_CARD",DEBIT_CARD:"DEBIT_CARD",NET_BANKING:"NET_BANKING",PREPAID_CARD:"PREPAID_CARD",IMPS:"IMPS"},o={TEST:"https://sandbox.citruspay.com/",DEBUG:"https://sandbox.citruspay.com/sslperf/",STAGING:"https://stg.citruspay.com/sslperf/",PRODUCTION:"https://www.citruspay.com/sslperf/",LOCAL:"http://localhost:8080/admin-site/sslperf/"};return env=i.PRODUCTION,v2Env=o.PRODUCTION,{PaymentModes:s,Env:i,getServer:r,getEnv:e,setEnv:t,getV2Server:a}}(),CitrusPay.Scheme={},CitrusPay.Scheme.Config={credit:[],debit:[]},CitrusPay.Scheme.Model={},CitrusPay.Scheme.Model.ReformatScheme=function(e){switch(e){case"visa":return"VISA";case"mastercard":case"master card":return"MCRD";case"maestro":case"maestro card":return"MTRO";case"amex":return"AMEX";case"dinersclub":case"diners club":return"DINERS";case"master card":return"MCRD";case"rupay card":return"RPAY"}return e},CitrusPay.Validators=function(){"use strict";function e(e){return function(t,r,a){a=a?a+": ":"";var i=o[r];if((null!==t&&void 0!==t&&""!==t||!e)&&!i.test(t))throw citrusClientErrMsg("Invalid value: "+t),new Error(a+"Invalid value: "+t+" for type: "+r+".")}}function t(e,t){var r=t;t=t?t+": ":"",e||0===e||e===!1||citrusClientErrMsg(r+" is required.")}function r(e,t){t=t?t+": ":"",0===e||e&&"number"!=typeof e||citrusClientErrMsg(t+"Invalid number: "+e+".")}function a(e,t,r){if(r=r?r+": ":"",-1===t.indexOf(e))throw citrusClientErrMsg(r+"Invalid value. Possible values are: "+t.toString()),new Error(r+"Invalid value. Possible values are: "+t.toString())}function i(e,t){var r=new Date,a=r.getMonth()+1,i=r.getFullYear().toString().slice(-2),n=e.replace(/\s+/g,"").replace("/",""),s=n.substr(0,2),o=n.slice(-2),u=n.length;if(6!=u)throw citrusClientErrMsg("Invalid date: "+e),new Error(t+"Invalid date: "+e+".");if(!((a>s&&o>i||s>=a&&o>=i)&&12>=s))throw citrusClientErrMsg("Invalid date: "+e),new Error(t+"Invalid date: "+e+".")}function n(e,t,r){var a=e.replace(/\s+/g,"");if(jQuery.payment.validateCardNumber(a)!==!0)throw citrusClientErrMsg("Invalid card number: "),new Error(r+"Invalid card number: "+e+".")}function s(e,t){switch(t){case"credit":if(-1===jQuery.inArray(e,CitrusPay.Scheme.Config.credit))throw citrusClientErrMsg(e+" Scheme is not available for : "+t+" card"),new Error(e+" Scheme is not available for : "+t+" card");break;case"debit":if(-1===jQuery.inArray(e,CitrusPay.Scheme.Config.debit))throw citrusClientErrMsg(e+" Scheme is not available for : "+t+" card"),new Error(e+" Scheme is not available for : "+t+" card")}}var o={Address:/^[\s\S]{1,255}$/,BankId:/^[1-9][0-9]*$/,CardNumber:/^[0-9]{15,19}$/,CardType:/^[\s\S]{1,255}$/,City:/^[\s\S]{1,100}$/,Country:/^[\s\S]{1,100}$/,CustomParam:/^[0-9a-zA-Z ]{1,20}$/,CVV:/^[0-9]{3,4}$/,"4DBC":/^[0-9]{4}$/,Email:/^(("[\w-+\s]+")|([\w-+]+(?:\.[\w-+]+)*)|("[\w-+\s]+")([\w-+]+(?:\.[\w-+]+)*))(@((?:[\w-+]+\.)*\w[\w-+]{0,66})\.([a-zA-Z]{2,6}(?:\.[a-zA-Z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][\d]\.|1[\d]{2}\.|[\d]{1,2}\.))((25[0-5]|2[0-4][\d]|1[\d]{2}|[\d]{1,2})\.){2}(25[0-5]|2[0-4][\d]|1[\d]{2}|[\d]{1,2})\]?$)/,Mobile:/^((\+){0,1}91(\s){0,1}(\-){0,1}(\s){0,1}){0,1}98(\s){0,1}(\-){0,1}(\s){0,1}[1-9]{1}[0-9]{7}$/,MonthNum:/^([0-9])|1[0-1]$/,Name:/^(?!\s*$)[a-zA-Z .]{1,50}$/,Password:/^(?=.*\d)(?=.*[A-Za-z])(?=.*[A-Za-z!@#$%^&*]).{8,16}/,PinCode:/^(?!\s*$)[a-zA-Z0-9\-, .] ?([a-zA-Z0-9\-, .]|[a-zA-Z0-9\-, .] )*[a-zA-Z0-9\-, .]{1,7}$/,State:/^[\s\S]{1,100}$/,YearNum:/^20[1-9][0-9]$/,Boolean:/^true|false$/,URL:/((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)/,MMID:/^(?!0)[a-zA-Z0-9]{7}$/,Mobile10D:/^(?!0)[0-9]{10}$/,OTP:/^(?!0)[0-9]{6}$/};return{RequiredValidator:t,RegularExpressionValidator:e(!1),OptionalRegularExpressionValidator:e(!0),NumberValidator:r,AllowedValuesValidator:a,DateValidator:i,CardNumberValidator:n,SchemeValidator:s}}(),CitrusPay.Rest={},CitrusPay.Rest.OAuth={},CitrusPay.Rest.OAuth.Config=function(){function e(){return CitrusPay.Config.getServer()+a}function t(){return CitrusPay.Config.getServer()+i}function r(e){return CitrusPay.Config.getV2Server()+e+n}var a="oauth/token",i="service/v2/identity/bind",n="/Signup";return{getTokenUrl:e,getBindUrl:t,getSignUpUrl:r}}(),CitrusPay.Rest.OAuth.Model={},CitrusPay.Rest.OAuth.Model.ImplicitTokenRequest=function(e){return{client_id:e.clientId||"",client_secret:e.clientSecret||"",grant_type:"implicit"}},CitrusPay.Rest.OAuth.Model.PasswordTokenRequest=function(e){return{client_id:e.clientId||"",client_secret:e.clientSecret||"",grant_type:"password",username:e.username||"",password:e.password||""}},CitrusPay.Rest.OAuth.Model.SignUpRequest=function(e){return{username:e.username||"",firstName:e.firstName||"",lastName:e.lastName||"",phoneNumber:e.phoneNumber||"",merchantTxnId:e.merchantTxnId||"",vanityUrl:e.vanityUrl||"",addressStreet1:e.addressStreet1||"",addressStreet2:e.addressStreet2||"",addressCity:e.addressCity||"",addressState:e.addressState||"",addressCountry:e.addressCountry||"",addressZip:e.addressZip||""}},CitrusPay.Rest.OAuth.Model.UserTokenRequest=function(e){return{client_id:e.clientId||"",client_secret:e.clientSecret||"",grant_type:"username",username:e.username||""}},CitrusPay.Rest.OAuth.Model.UserNameRequest=function(e){return{access_token:e.access_token,grant_type:"username",username:e.username||"",mobile:e.mobile||""}},CitrusPay.Rest.OAuth.Model.TokenResponse=function(e){return{access_token:e.access_token}},CitrusPay.Rest.OAuth.Validators=function(){function e(e){CitrusPay.Validators.RequiredValidator(e.client_id,"Client ID"),CitrusPay.Validators.RequiredValidator(e.client_secret,"Client secret")}function t(e){CitrusPay.Validators.RequiredValidator(e.client_id,"Client ID"),CitrusPay.Validators.RequiredValidator(e.client_secret,"Client secret"),CitrusPay.Validators.RequiredValidator(e.username,"Username"),CitrusPay.Validators.RequiredValidator(e.password,"Password")}function r(e){CitrusPay.Validators.RequiredValidator(e.client_id,"Client ID"),CitrusPay.Validators.RequiredValidator(e.client_secret,"Client secret"),CitrusPay.Validators.RequiredValidator(e.username,"Username")}function a(e){CitrusPay.Validators.RequiredValidator(e.access_token,"Access token"),CitrusPay.Validators.RequiredValidator(e.mobile,"Mobile"),CitrusPay.Validators.RequiredValidator(e.username,"Username")}function i(e){CitrusPay.Validators.RequiredValidator(e.access_token,"Access token")}function n(e){CitrusPay.Validators.RequiredValidator(e.username,"Username"),CitrusPay.Validators.RegularExpressionValidator(e.username,"Email","Email address"),CitrusPay.Validators.RequiredValidator(e.firstName,"First Name"),CitrusPay.Validators.RequiredValidator(e.phoneNumber,"Mobile number"),CitrusPay.Validators.RegularExpressionValidator(e.phoneNumber,"Mobile10D","Mobile number"),CitrusPay.Validators.RequiredValidator(e.merchantTxnId,"Transaction Id"),CitrusPay.Validators.RequiredValidator(e.vanityUrl,"Vanity Url")}return{ImplicitTokenRequestValidator:e,PasswordTokenRequestValidator:t,TokenResponseValidator:i,AuthTokenValidator:i,UserTokenRequestValidator:r,UserNameRequestValidator:a,SignupRequestValidator:n}}(),CitrusPay.Rest.OAuth.Service=function(){function e(e,t,r){jQuery.ajax({type:"POST",url:CitrusPay.Rest.OAuth.Config.getTokenUrl(),contentType:"application/x-www-form-urlencoded",data:e,success:function(e){t?t(CitrusPay.Rest.OAuth.Model.TokenResponse(e)):""},error:function(e){console.log(e),console.log("Error in making oauth token request"),r?r():""}})}function t(e,t,r){jQuery.ajax({type:"POST",url:CitrusPay.Rest.OAuth.Config.getBindUrl(),contentType:"application/x-www-form-urlencoded",headers:{Authorization:"Bearer "+e.access_token},data:{email:e.username,mobile:e.mobile},success:function(e){t?t(e):""},error:function(){console.log("Error in making oauth token request"),r?r():""}})}function r(e,t,r,a){jQuery.ajax({type:"POST",url:CitrusPay.Rest.OAuth.Config.getSignUpUrl(t),contentType:"application/x-www-form-urlencoded",data:e,success:function(e){r?r(e):""},error:function(){console.log("Error in making sign up request"),a?a():""}})}return{requestToken:e,getUserName:t,signUpUser:r}}(),CitrusPay.Rest.OAuth.API=function(){function e(e,t,r){CitrusPay.Rest.OAuth.Validators.ImplicitTokenRequestValidator(e),CitrusPay.Rest.OAuth.Service.requestToken(e,t,r)}function t(e,t,r,a){CitrusPay.Rest.OAuth.Validators.SignupRequestValidator(e),CitrusPay.Rest.OAuth.Service.signUpUser(e,t,r,a)}function r(e,t,r){CitrusPay.Rest.OAuth.Validators.PasswordTokenRequestValidator(e),CitrusPay.Rest.OAuth.Service.requestToken(e,t,r)}function a(e,t,r){CitrusPay.Rest.OAuth.Validators.UserTokenRequestValidator(e),CitrusPay.Rest.OAuth.Service.requestToken(e,t,r)}function i(e,t,r){CitrusPay.Rest.OAuth.Validators.ImplicitTokenRequestValidator(e),CitrusPay.Rest.OAuth.Service.requestToken(e,t,r)}function n(e,t,r){CitrusPay.Rest.OAuth.Validators.UserNameRequestValidator(e),CitrusPay.Rest.OAuth.Service.getUserName(e,t,r)}return{getImplicitToken:e,getPasswordToken:r,getUserToken:a,bindUserName:i,getUserName:n,signUpUser:t}}(),CitrusPay.Rest.ProfileV2={},CitrusPay.Rest.ProfileV2.Identity={},CitrusPay.Rest.ProfileV2.Identity.Config=function(){function e(e){return CitrusPay.Config.getServer()+t[e]}var t={signup:"service/v2/identity/new",passwordChange:"service/v2/identity/me/password",passwordReset:"service/v2/identity/passwords/reset",passwordVerify:"v2/identity/me/password"};return{getUrl:e}}(),CitrusPay.Rest.ProfileV2.Identity.Model={},CitrusPay.Rest.ProfileV2.Identity.Model.SignupRequest=function(e){return{email:e.email||"",mobile:e.mobile||""}},CitrusPay.Rest.ProfileV2.Identity.Validators=function(){function e(e){CitrusPay.Validators.RequiredValidator(e.email,"Email address"),CitrusPay.Validators.RegularExpressionValidator(e.email,"Email","Email address"),CitrusPay.Validators.RequiredValidator(e.mobile,"Mobile number"),CitrusPay.Validators.RegularExpressionValidator(e.mobile,"Mobile10D","Mobile number")}function t(e){CitrusPay.Validators.RequiredValidator(e.old),CitrusPay.Validators.RequiredValidator(e["new"])}function r(e){CitrusPay.Validators.RequiredValidator(e.username)}function a(e){CitrusPay.Validators.RequiredValidator(e.password)}function i(e){CitrusPay.Validators.RequiredValidator(e.username)}return{SignupRequestValidator:e,PasswordChangeRequestValidator:t,PasswordResetRequestValidator:r,PasswordVerifyRequestValidator:a,IdentityValidator:i}}(),CitrusPay.Rest.ProfileV2.Identity.Service=function(){function signup(authToken,signupRequest,cb,cbErr){jQuery.ajax({type:"POST",url:CitrusPay.Rest.ProfileV2.Identity.Config.getUrl("signup"),headers:{Authorization:"Bearer "+authToken.accessToken},contentType:"application/x-www-form-urlencoded",data:signupRequest,success:function(e){cb?cb(e):""},error:function(xhr,status,error){var err=eval("("+xhr.responseText+")");console.log(err),console.log("Error in making signup request."),cbErr?cbErr():""}})}return{signup:signup}}(),CitrusPay.Rest.ProfileV2.Identity.API=function(){function e(e,t,r,a){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(e),CitrusPay.Rest.ProfileV2.Identity.Validators.SignupRequestValidator(t),CitrusPay.Rest.ProfileV2.Identity.Service.signup(e,t,r,a)}return{signup:e}}(),CitrusPay.Rest.Payment={},CitrusPay.Rest.Payment.Config=void 0,CitrusPay.Rest.Payment.Model=function(){function e(e){return{currency:e.currency||"INR",value:e.value||""}}return{Amount:e}}(),CitrusPay.Rest.Payment.Validators=function(){function e(e){CitrusPay.Validators.RequiredValidator(e,"Amount value"),CitrusPay.Validators.NumberValidator(e,"Amount value")}return{AmountValidator:e}}(),CitrusPay.Rest.Merchant={},CitrusPay.Rest.Merchant.Config=function(){function e(){return CitrusPay.Config.getServer()+t}var t="service/v1/merchant/pgsetting";return{getTokenUrl:e}}(),CitrusPay.Rest.Merchant.Service=function(){function e(e,t,r){jQuery.ajax({type:"POST",url:CitrusPay.Rest.Merchant.Config.getTokenUrl(),data:{vanity:e},success:function(e){t?t(e):""},error:function(){console.log("Error"),r?r():""}})}return{getPaymentOption:e}}(),CitrusPay.Rest.Merchant.API=function(){function e(e,t,r){CitrusPay.Rest.Merchant.Service.getPaymentOption(e,t,r)}return{getavailablePaymentOptions:e}}(),CitrusPay.Rest.ProfileV1={},CitrusPay.Rest.ProfileV1.Config=function(){function e(e){return CitrusPay.Config.getServer()+t[e]}var t={signup:"v1/profile/new",updateProfile:"v1/profile/me",getProfile:"service/v2/profile/me/contact",passwordReset:"v1/profile/password/reset",passwordChange:"v1/profile/me/password",passwordVerify:"v1/profile/password/verify"},r={ProfileElement:{ContactDetails:"com.citruspay.common.subscription.bean.ContactDetails",FastCheckoutPreferences:"com.citruspay.common.subscription.bean.FastCheckoutPreferences"},PaymentOption:{NetBankingPayment:"com.citruspay.common.subscription.util.NetBankingPayment",PaymentCard:{CreditCard:"com.citruspay.common.subscription.util.CreditCard",DebitCard:"com.citruspay.common.subscription.util.DebitCard",PrepaidPaymentCard:"com.citruspay.common.subscription.util.PrepaidPaymentCard"}}};return{getUrl:e,Class:r}}(),CitrusPay.Rest.ProfileV1.Model={},CitrusPay.Rest.ProfileV1.Model.SignupRequest=function(e){return{email:e.email||"",password:e.password||"",mobile:e.mobile||"",firstName:e.firstname||"",lastName:e.lastName||""}},CitrusPay.Rest.ProfileV1.Model.PaymentOption={NetBankingPayment:function(e){return{"@class":CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.NetBankingPayment,name:e.name||"",bank:e.bank||""}},PaymentCard:function(){function e(e){return function(t){return{"@class":e,name:t.name||"",owner:t.owner||"",number:t.number||"",expiryDate:t.expiryDate||"",bank:t.bank||"",scheme:t.scheme||""}}}return{CreditCard:e(CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.CreditCard),DebitCard:e(CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.DebitCard),PrepaidPaymentCard:e(CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PrepaidPaymentCard)}}()},CitrusPay.Rest.ProfileV1.Validators=function(){function e(e){CitrusPay.Validators.requiredValidator(e.email,"Email address"),CitrusPay.Validators.regularExpressionValidator(e.email,"Email","Email address"),CitrusPay.Validators.requiredValidator(e.password,"Password"),CitrusPay.Validators.regularExpressionValidator(e.password,"Password","Password"),CitrusPay.Validators.requiredValidator(e.mobile,"Mobile number"),CitrusPay.Validators.regularExpressionValidator(e.mobile,"Mobile","Mobile number"),CitrusPay.Validators.requiredValidator(e.firstName,"First name"),CitrusPay.Validators.regularExpressionValidator(e.firstName,"Name","First name"),CitrusPay.Validators.requiredValidator(e.lastName,"Last name"),CitrusPay.Validators.regularExpressionValidator(e.lastName,"Name","Last name")}function t(e){CitrusPay.Validators.requiredValidator(e.oldPassword),CitrusPay.Validators.requiredValidator(e.newPassword),CitrusPay.Validators.regularExpressionValidator(profileData.password,"Password","Password")}function r(e){CitrusPay.Validators.requiredValidator(e.username)}function a(e){CitrusPay.Validators.requiredValidator(e.password)}function i(e){CitrusPay.Validators.requiredValidator(e.name);for(var t in e.elements){var r=e.elements[t];CitrusPay.Validators.requiredValidator(r["@class"]),CitrusPay.Validators.allowedValuesValidator(r["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.ProfileElement.ContactDetails,CitrusPay.Rest.ProfileV1.Config.Class.ProfileElement.FastCheckoutPreferences]),d[r["@class"]](r)}}function n(e){CitrusPay.Validators.requiredValidator(e["@class"]),CitrusPay.Validators.allowedValuesValidator(e["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.ProfileElement.ContactDetails]),CitrusPay.Validators.requiredValidator(e.email,"Email address"),CitrusPay.Validators.regularExpressionValidator(e.email,"Email","Email address"),CitrusPay.Validators.requiredValidator(e.mobile,"Mobile number"),CitrusPay.Validators.regularExpressionValidator(e.mobile,"Mobile","Mobile number"),CitrusPay.Validators.requiredValidator(e.firstName,"First name"),CitrusPay.Validators.regularExpressionValidator(e.firstName,"Name","First name"),CitrusPay.Validators.requiredValidator(e.lastName,"Last name"),CitrusPay.Validators.regularExpressionValidator(e.lastName,"Name","Last name")}function s(e){CitrusPay.Validators.requiredValidator(e["@class"]),CitrusPay.Validators.allowedValuesValidator(e["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.ProfileElement.FastCheckoutPreferences]);for(var t in e.paymentOptions){var r=e.paymentOptions[t];CitrusPay.Validators.requiredValidator(r["@class"]),CitrusPay.Validators.allowedValuesValidator(r["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.NetBankingPayment,CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.CreditCard,CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.DebitCard,CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.PrepaidPaymentCard]),d[r["@class"]](r)}}function o(e){CitrusPay.Validators.requiredValidator(e["@class"]),CitrusPay.Validators.allowedValuesValidator(e["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.NetBankingPayment]),CitrusPay.Validators.requiredValidator(e.bank)}function u(e){CitrusPay.Validators.requiredValidator(e["@class"]),CitrusPay.Validators.allowedValuesValidator(e["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.CreditCard,CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.DebitCard]),CitrusPay.Validators.requiredValidator(e.owner),CitrusPay.Validators.requiredValidator(e.number),CitrusPay.Validators.requiredValidator(e.bank),CitrusPay.Validators.requiredValidator(e.expiryDate)}function l(e){CitrusPay.Validators.requiredValidator(e["@class"]),CitrusPay.Validators.allowedValuesValidator(e["@class"],[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.PrepaidPaymentCard]),CitrusPay.Validators.requiredValidator(e.owner),CitrusPay.Validators.requiredValidator(e.number),CitrusPay.Validators.requiredValidator(e.bank),CitrusPay.Validators.requiredValidator(e.expiryDate),CitrusPay.Validators.requiredValidator(e.scheme)}var d=function(){var e={};return e[CitrusPay.Rest.ProfileV1.Config.Class.ProfileElement.ContactDetails]=n,e[CitrusPay.Rest.ProfileV1.Config.Class.ProfileElement.FastCheckoutPreferences]=s,e[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.NetBankingPayment]=o,e[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.CreditCard]=u,e[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.DebitCard]=u,e[CitrusPay.Rest.ProfileV1.Config.Class.PaymentOption.PaymentCard.PrepaidPaymentCard]=l,e}();return{SignupRequestValidator:e,PasswordChangeRequestValidator:t,PasswordResetRequestValidator:r,PasswordVerifyRequestValidator:a,ProfileValidator:i}}(),CitrusPay.Rest.ProfileV1.Service=function(){function e(e,t,r,a){jQuery.ajax({type:"POST",url:CitrusPay.Rest.ProfileV1.Config.getUrl("signup"),headers:{Authorization:"Bearer "+e.accessToken},contentType:"application/x-www-form-urlencoded",data:t,success:function(e){r?r(e):""},error:function(){console.log("Error in making signup request."),a?a():""}})}function t(e,t,r){jQuery.ajax({type:"GET",url:CitrusPay.Rest.ProfileV1.Config.getUrl("getProfile"),headers:{Authorization:"Bearer "+e.accessToken},contentType:"application/json",success:function(e){t?t(e):""},error:function(){console.log("Error in making get profile request."),r?r():""}})}return{signup:e,profileGet:t}}(),CitrusPay.Rest.ProfileV1.API=function(){function e(e,t,r){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(e),CitrusPay.Rest.ProfileV1.Validators.SignupRequestValidator(t),CitrusPay.Rest.ProfileV1.Service.signup(e,t,r)}function t(e,t,r,a){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(e),CitrusPay.Rest.ProfileV1.Service.profileUpdate(e,t,r,a)}function r(e,t){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(e),CitrusPay.Rest.ProfileV1.Service.profileGet(e,t)}return{signup:e,profileUpdate:t,profileGet:r}}(),CitrusPay.Rest.ProfileV2.Profile={},CitrusPay.Rest.ProfileV2.Profile.Config=function(){function e(e){return CitrusPay.Config.getServer()+t[e]}var t={contact:"service/v2/profile/me/contact",payment:"service/v2/profile/me/payment",prepaid:"service/v2/profile/me/prepaid",mobileapp:"service/v2/profile/me/mobileapp",addOption:"service/v2/profile/me/payment"},r={ProfileElement:{Contact:"contact",Payment:"payment",Prepaid:"prepaid",MobileApp:"mobileapp"},PaymentOption:{CreditCardPayment:"credit",DebitCardPayment:"debit",NetBankingPayment:"netbanking",IMPSPayment:"imps"}};return{Class:r,getUrl:e}}(),CitrusPay.Rest.ProfileV2.Profile.Model={},CitrusPay.Rest.ProfileV2.Profile.Model.ProfileElement=function(){function e(e){return{type:s.contact,firstName:e.firstName||"",lastName:e.lastName||"",email:e.email||"",mobile:e.mobile||""}}function t(e){return{type:s.prepaid,currency:e.currency||"",cashoutAccount:e.cashoutAccount||CitrusPay.Rest.ProfileV2.Profile.Model.TransferRecipientAccount({})}}function r(e){return{type:"mobileapp",deviceKey:e.deviceKey||""}}function a(e){return{type:"payment",defaultOption:e.defaultOption||"",paymentOptions:e.paymentOptions||[]}}function i(e){return{type:"payment",paymentOptions:[{owner:e.owner,number:e.number,scheme:e.scheme,type:e.type,expiryDate:e.expiry}]}}function n(e){return{type:"payment",paymentOptions:[{type:"netbanking",bank:e.bank,owner:e.owner}]}}var s={contact:"contact",prepaid:"prepaid",mobileapp:"mobileapp",payment:"payment"};return{Type:s,Contact:e,Prepaid:t,MobileApp:r,Payment:a,Card:i,NetBanking:n}}(),CitrusPay.Rest.ProfileV2.Profile.Model.TransferRecipientAccount=function(e){return{owner:e.owner||"",number:e.number||"",branch:e.branch||""}},CitrusPay.Rest.ProfileV2.Profile.Model.PaymentOption=function(){function e(e){return function(t){return{type:e,token:t.token||"",name:t.name||"",owner:t.owner||"",number:t.number||"",expiryDate:t.expiryDate||"",bank:t.bank||"",scheme:t.scheme||"",mmid:t.mmid||"",impsRegisteredMobile:t.impsRegisteredMobile||""}}}var t={credit:"credit",debit:"debit",netbanking:"netbanking",imps:"imps"};return{Type:t,CreditCardPayment:e("credit"),DebitCardPayment:e("debit"),NetBankingPayment:e("netbanking"),IMPSPayment:e("imps")}}(),CitrusPay.Rest.ProfileV2.Profile.Validators=function(){function e(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Contact],"Contact type"),CitrusPay.Validators.RequiredValidator(e.firstName,"First Name"),CitrusPay.Validators.RequiredValidator(e.lastName,"LastName"),CitrusPay.Validators.RequiredValidator(e.email,"Email address"),CitrusPay.Validators.RequiredValidator(e.mobile,"Mobile number"),CitrusPay.Validators.RegularExpressionValidator(e.firstName,"Name","First Name"),CitrusPay.Validators.RegularExpressionValidator(e.lastName,"Name","Last Name"),CitrusPay.Validators.RegularExpressionValidator(e.firstName,"Email","Email address"),CitrusPay.Validators.RegularExpressionValidator(e.firstName,"Mobile","Mobile number")}function t(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Prepaid],"Prepaid type"),CitrusPay.Validators.RequiredValidator(e.currency,"Prepaid currency"),r(e.cashoutAccount)}function r(e){CitrusPay.Validators.RequiredValidator(e.owner,"Account owner"),CitrusPay.Validators.RequiredValidator(e.number,"Account number"),CitrusPay.Validators.RequiredValidator(e.branch,"Bank branch")}function a(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.MobileApp],"MobileApp type"),CitrusPay.Validators.RequiredValidator(e.deviceKey)}function i(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Payment],"Payment type");for(var t in e.paymentOptions){var r=e.paymentOptions[t];CitrusPay.Validators.AllowedValuesValidator(r.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.CreditCardPayment,CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.DebitCardPayment,CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.NetBankingPayment,CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.IMPSPayment],"Payment type"),d[r.type](r)
}}function n(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.CreditCardPayment],"Credit card type"),CitrusPay.Validators.RequiredValidator(e.owner),CitrusPay.Validators.RequiredValidator(e.number),CitrusPay.Validators.RequiredValidator(e.expiryDate)}function s(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.DebitCardPayment],"Debit card type"),CitrusPay.Validators.RequiredValidator(e.owner),CitrusPay.Validators.RequiredValidator(e.number),CitrusPay.Validators.RequiredValidator(e.expiryDate)}function o(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.NetBankingPayment],"Net banking type"),CitrusPay.Validators.RequiredValidator(e.bank)}function u(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.IMPSPayment],"IMPS type"),CitrusPay.Validators.RequiredValidator(e.impsRegisteredMobile),CitrusPay.Validators.RequiredValidator(e.mmid)}function l(e){CitrusPay.Validators.AllowedValuesValidator(e.type,[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Contact,CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Prepaid,CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.MobileApp,CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Payment],"Type"),d[e.type](e)}var d=function(){var r={};return r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Contact]=e,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Prepaid]=t,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.MobileApp]=a,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.ProfileElement.Payment]=i,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.CreditCardPayment]=n,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.DebitCardPayment]=s,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.NetBankingPayment]=o,r[CitrusPay.Rest.ProfileV2.Profile.Config.Class.PaymentOption.IMPSPayment]=u,r}();return{ContactValidator:e,PrepaidValidator:t,MobileAppValidator:a,PaymentValidator:i,ProfileElementValidator:l}}(),CitrusPay.Rest.ProfileV2.Profile.Service=function(){function e(e,t,r,a){jQuery.ajax({type:"GET",url:CitrusPay.Rest.ProfileV2.Profile.Config.getUrl(e),headers:{Authorization:"Bearer "+t.access_token},success:function(e){r?r(e):""},error:function(){console.log("Error in making get profile request."),a?a():""}})}function t(e,t,r,a,i){jQuery.ajax({type:"PUT",url:CitrusPay.Rest.ProfileV2.Profile.Config.getUrl(e),headers:{Authorization:"Bearer "+t.access_token},contentType:"application/json",data:JSON.stringify(r),success:function(e){a?a(e):""},error:function(){console.log("Error in making update profile request."),i?i():""}})}function r(e,t,r,a){jQuery.ajax({type:"DELETE",url:CitrusPay.Rest.ProfileV2.Profile.Config.getUrl(e)+"/"+r,headers:{Authorization:"Bearer "+t.accessToken},success:function(e){a?a(e):""},error:function(){console.log("Error in making update profile request."),cbErr?cbErr():""}})}function a(e,t,r,a){jQuery.ajax({type:"PUT",url:CitrusPay.Rest.ProfileV2.Profile.Config.getUrl("addOption"),headers:{Authorization:"Bearer "+t.accessToken},data:e,success:function(e){r?r(e):""},error:function(){console.log("Error in adding card"),a?a():""}})}function i(e,t,r,a,i){jQuery.ajax({type:"PUT",url:CitrusPay.Rest.ProfileV2.Profile.Config.getUrl("addOption"),headers:{Authorization:"Bearer"+t.accessToken},data:e,success:function(e){a?a(e):""},error:function(){console.log("Error in adding net banking"),i?i():""}})}return{getProfileElement:e,putProfileElement:t,deleteProfileElement:r,addCardDetails:a,addNetbankingDetails:i}}(),CitrusPay.Rest.ProfileV2.Profile.API=function(){function e(e,t,r,a){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(t),CitrusPay.Rest.ProfileV2.Profile.Service.getProfileElement(e,t,r,a)}function t(e,t,r,a,i){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(t),CitrusPay.Rest.ProfileV2.Profile.Service.putProfileElement(e,t,r,a,i)}function r(e,t,r,a,i){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(t),CitrusPay.Validators.RequiredValidator(r),CitrusPay.Rest.ProfileV2.Profile.Service.deleteProfileElement(e,t,r,a,i)}function a(e,t,r,a){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(t),CitrusPay.Rest.ProfileV2.Profile.Service.addCardDetails(e,t,name,r,a)}function i(e,t,r,a){CitrusPay.Rest.OAuth.Validators.AuthTokenValidator(t),CitrusPay.Rest.ProfileV2.Profile.Service.addNetbankingDetails(e,t,name,r,a)}return{getProfileElement:e,putProfileElement:t,deleteProfileElement:r,addCardDetails:a,addNetbankingDetails:i}}(),CitrusPay.Rest.Payment.Payment={},CitrusPay.Rest.Payment.Payment.Config=function(){function e(e){e=e.split(".");var t=urls;for(var r in e)t=t[e[r]];return CitrusPay.Config.getServer()+t}return urls={moto:{struct:"service/moto/authorize/struct/",unstruct:"service/moto/authorize/"}},{getUrl:e}}(),CitrusPay.Rest.Payment.Payment.Model={},CitrusPay.Rest.Payment.Payment.Model.PaymentRequest=function(e){return{merchantTxnId:e.merchantTxnId||"",amount:e.amount||CitrusPay.Rest.Payment.Model.Amount(),userDetails:e.userDetails||CitrusPay.Rest.Payment.Payment.Model.UserDetails(),returnUrl:e.returnUrl||"",paymentToken:e.paymentToken||CitrusPay.Rest.Payment.Payment.Model.PaymentToken.PaymentOptionIdToken(),notifyUrl:e.notifyUrl||"",merchantAccessKey:e.merchantAccessKey||"",requestSignature:e.requestSignature||""}},CitrusPay.Rest.Payment.Payment.Model.UserDetails=function(e){return{email:e.email||"",firstName:e.firstName||"",lastName:e.lastName||"",address:e.address||CitrusPay.Rest.Payment.Payment.Model.Address(),mobileNo:e.mobileNo||""}},CitrusPay.Rest.Payment.Payment.Model.Address=function(e){return{street1:e.street1||"NA",street2:e.street2||"NA",city:e.city||"NA",state:e.state||"NA",country:e.country||"NA",zip:e.zip||"NA"}},CitrusPay.Rest.Payment.Payment.Model.PaymentToken=function(){function e(e){return{type:"paymentOptionIdToken",id:e.id||"",cvv:e.cvv||""}}function t(e){return{type:"paymentOptionToken",paymentMode:e.paymentMode||CitrusPay.Rest.Payment.Payment.Model.ModeOfPayment.CreditCard()}}function r(e){return{type:"paymentOptionIdToken",id:e.id}}return{PaymentOptionIdToken:e,PaymentOptionToken:t,MemberPaymentOptionToken:r}}(),CitrusPay.Rest.Payment.Payment.Model.ModeOfPayment=function(){function e(e){return{type:"netbanking",bank:e.bank||"",code:e.code||""}}function t(e){return function(t){return{type:e,scheme:t.scheme||"",number:t.number||"",holder:t.holder||"",expiry:t.expiry||"",cvv:t.cvv||""}}}return{NetBanking:e,CreditCard:t("credit"),DebitCard:t("debit"),PrepaidCard:t("prepaid")}}(),CitrusPay.Rest.Payment.Payment.Validators=function(){function e(e){CitrusPay.Validators.RequiredValidator(e.merchantTxnId,"Merchant transaction id"),CitrusPay.Rest.Payment.Validators.AmountValidator(e.amount),t(e.userDetails),CitrusPay.Validators.RequiredValidator(e.returnUrl,"Return url"),CitrusPay.Validators.RegularExpressionValidator(e.returnUrl,"URL","Return url"),a(e.paymentToken),CitrusPay.Validators.OptionalRegularExpressionValidator(e.notify,"URL","Notify url"),CitrusPay.Validators.RequiredValidator(e.merchantAccessKey,"Merchant access key"),CitrusPay.Validators.RequiredValidator(e.requestSignature,"Request signature")}function t(e){CitrusPay.Validators.RequiredValidator(e.email,"Email address"),CitrusPay.Validators.RegularExpressionValidator(e.email,"Email","Email address"),CitrusPay.Validators.RequiredValidator(e.firstName,"First name"),CitrusPay.Validators.RegularExpressionValidator(e.firstName,"Name","First name"),r(e.address),CitrusPay.Validators.RequiredValidator(e.mobileNo,"Mobile number")}function r(){}function a(e){function t(e){CitrusPay.Validators.RequiredValidator(e.id,"Payment option id"),CitrusPay.Validators.OptionalRegularExpressionValidator(e.cvv,"CVV")}function r(e){i(e.paymentMode)}var a={paymentOptionIdToken:t,paymentOptionToken:r};CitrusPay.Validators.RequiredValidator(e.type,"Payment token type"),a[e.type](e)}function i(e){function t(e){CitrusPay.Validators.RequiredValidator(e.bank,"Bank name"),CitrusPay.Validators.RequiredValidator(e.code,"Bank")}function r(e){if(e.scheme=CitrusPay.Scheme.Model.ReformatScheme(e.scheme),CitrusPay.Validators.RequiredValidator(e.scheme,"Card number"),CitrusPay.Validators.RequiredValidator(e.number,"Card number"),"MTRO"!==e.scheme&&CitrusPay.Validators.CardNumberValidator(e.number,"CardNumber","Card number"),"MTRO"===e.scheme){var t=new Date;e.expiry="12/"+(t.getFullYear()+1);var r=Math.floor(901*Math.random())+100;e.cvv=r}CitrusPay.Validators.RegularExpressionValidator(e.number,"CardNumber","Card number"),CitrusPay.Validators.RequiredValidator(e.holder,"Card holder name"),CitrusPay.Validators.RegularExpressionValidator(e.holder,"Name","Card holder"),CitrusPay.Validators.DateValidator(e.expiry,"Card expiry"),CitrusPay.Validators.RequiredValidator(e.expiry,"Card expiry"),CitrusPay.Validators.RequiredValidator(e.cvv,"CVV number"),CitrusPay.Validators.RegularExpressionValidator(e.cvv,"CVV","CVV number")}function a(e){CitrusPay.Validators.RequiredValidator(e.scheme,"Card Scheme"),CitrusPay.Validators.RequiredValidator(e.holder,"Card holder name")}var i={netbanking:t,credit:r,debit:r,prepaid:a};CitrusPay.Validators.RequiredValidator(e.type,"Mode of payment type"),i[e.type](e)}return{PaymentRequestValidator:e}}(),CitrusPay.Rest.Payment.Payment.Service=function(){function e(e,t,r,a){jQuery.ajax({async:!1,type:"POST",url:CitrusPay.Rest.Payment.Payment.Config.getUrl("moto.struct")+t,contentType:"application/json",data:JSON.stringify(e),success:function(e){r?r(e):""},error:function(){console.log("Error in making payment request."),a?a():""}})}return{makePayment:e}}(),CitrusPay.Rest.Payment.Payment.API=function(){function e(e,t,r,a){CitrusPay.Rest.Payment.Payment.Validators.PaymentRequestValidator(e),CitrusPay.Rest.Payment.Payment.Service.makePayment(e,t,r,a)}return{makePayment:e}}(),CitrusPay.Prepaid={},CitrusPay.Prepaid.Config=function(){function e(){return CitrusPay.Config.getServer()+r}function t(){return CitrusPay.Config.getServer()+a}var r="service/v2/mycard",a="service/v2/prepayment/pay";return{getBalanceUrl:e,getPaymentUrl:t}}(),CitrusPay.Prepaid.Model=function(){function e(e){return{merchantTransactionId:e.merchantTransactionId,amount:e.amount,currency:e.currency||"INR",comment:e.comment||""}}return{PaymentRequest:e}}(),CitrusPay.Prepaid.Service=function(){function e(e,t,r){jQuery.ajax({type:"GET",url:CitrusPay.Prepaid.Config.getBalanceUrl(),dataType:"json",type:"GET",beforeSend:function(e){e.setRequestHeader("Authorization","Bearer 11189246-32eb-4882-aed9-36b32aeb112b")},success:function(e){console.log(e),t?t(e):""},error:function(e,t,a){console.log(JSON.stringify(e)+JSON.stringify(t)+JSON.stringify(a)),console.log("Error in making oauth token request"),r?r():""}})}function t(e,t,r,a){jQuery.ajax({type:"POST",url:CitrusPay.Prepaid.Config.getPaymentUrl(),headers:{Authorization:"Bearer "+t.access_token},data:e,success:function(e){console.log(e),r?r(e):""},error:function(e,t,r){console.log(JSON.stringify(e)+JSON.stringify(t)+JSON.stringify(r)),console.log("Error in making payment request"),a?a():""}})}return{getBalance:e,makePayment:t}}(),CitrusPay.Prepaid.API=function(){function e(e,t,r){CitrusPay.Prepaid.Service.getBalance(e,t,r)}function t(e,t,r,a){CitrusPay.Prepaid.Service.makePayment(e,t,r,a)}return{getBalance:e,makePayment:t}}();var mtx=jQuery("#citrusMerchantTxnId").val(),amount=CitrusPay.Rest.Payment.Model.Amount({value:jQuery("#citrusAmount").val()});